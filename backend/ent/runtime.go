// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/theuo/app/ent/paymentstatus"
	"github.com/theuo/app/ent/paytype"
	"github.com/theuo/app/ent/schema"
	"github.com/theuo/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	paytypeFields := schema.PayType{}.Fields()
	_ = paytypeFields
	// paytypeDescTypeInfo is the schema descriptor for TypeInfo field.
	paytypeDescTypeInfo := paytypeFields[0].Descriptor()
	// paytype.TypeInfoValidator is a validator for the "TypeInfo" field. It is called by the builders before save.
	paytype.TypeInfoValidator = paytypeDescTypeInfo.Validators[0].(func(string) error)
	paymentstatusFields := schema.PaymentStatus{}.Fields()
	_ = paymentstatusFields
	// paymentstatusDescPaymentStatus is the schema descriptor for PaymentStatus field.
	paymentstatusDescPaymentStatus := paymentstatusFields[0].Descriptor()
	// paymentstatus.PaymentStatusValidator is a validator for the "PaymentStatus" field. It is called by the builders before save.
	paymentstatus.PaymentStatusValidator = paymentstatusDescPaymentStatus.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for Name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for Email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
